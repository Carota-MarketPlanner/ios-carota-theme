name: Build App

on:
  workflow_call:
    outputs:
      name:
        description: "Pod Name"
        value: ${{ jobs.build-xcframework.outputs.name }}
      version: 
        description: "Pod Version"
        value: ${{ jobs.build-xcframework.outputs.version }}

jobs:
  build-xcframework:
    name: Build iOS App
    runs-on: macos-latest

    outputs:
      name: ${{ steps.extract_info.outputs.name }}
      version: ${{ steps.extract_info.outputs.version }}

    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Config Xcode Vresion
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Setup authentication for Artifactory
        run: |
          echo "machine artifactory.carotaapp.com login ${{ secrets.ARTIFACTORY_USER }} password ${{ secrets.ARTIFACTORY_PASSWORD }}" > ~/.netrc
          chmod 600 ~/.netrc

      - name: Install CocoaPods Dependencies
        run: |
          gem install cocoapods
          pod install
        working-directory: ./Example

      - name: Extact name and version from Podspec
        id: extract_info
        run: |
          PODSPEC_FILE=$(find . -name "*.podspec")
          NAME=$(grep 's.name' $PODSPEC_FILE | sed -n -e 's/^.*s.name *= *//p'| tr -d '"' | tr -d "'")
          echo "NAME=${NAME}" >> $GITHUB_ENV
          echo "name=${NAME}" >> $GITHUB_OUTPUT
          VERSION=$(grep 's.version' $PODSPEC_FILE | sed -n -e 's/^.*s.version *= *//p'| tr -d '"' | tr -d "'")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build and Create .xcframework
        run: |
          xcodebuild archive -workspace ./Example/${{ env.NAME }}.xcworkspace \
          -scheme ${{ env.NAME }} \
          -destination "generic/platform=iOS" \
          -archivePath build/ios.xcarchive \
          -sdk iphoneos \
          SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES

          xcodebuild archive -workspace ./Example/${{ env.NAME }}.xcworkspace \
          -scheme ${{ env.NAME }} \
          -destination "generic/platform=iOS Simulator" \
          -archivePath build/ios-simulator.xcarchive \
          -sdk iphonesimulator \
          SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES

          xcodebuild -create-xcframework \
          -framework build/ios.xcarchive/Products/Library/Frameworks/${{ env.NAME }}.framework \
          -framework build/ios-simulator.xcarchive/Products/Library/Frameworks/${{ env.NAME }}.framework \
          -output build/${{ env.NAME }}.xcframework

      - name: Upload XCFramework como Artifact
        uses: actions/upload-artifact@v4
        with:
          name: xcframework-${{ env.NAME }}-${{ env.VERSION }}
          path: build/${{ env.NAME }}.xcframework